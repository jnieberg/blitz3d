;*****************************************
;********** File Selector v1.00 **********
;**********     By Wishbone     **********
;**********         2003        **********
;*****************************************

Const fsFileMax=16384
Global fsFileNum=0
Global fsDir$
Global fsDirF$
Global fsFileThis$,fsFileSel
Global fsFirstFile
Global fsGfxMouse
Global fsCols%
Global fdDriveNum

Dim fsFile$(fsFileMax-1)
Dim fsDrive%(25)

;dir$		The current directory (eg. C:\)
;mask$		The file mask (eg. *.tga)
;maskName$	The name of the file mask (eg. Targa images)
;fileName$	The filename that is standardly filled in the textbox (eg. picture.tga)
;title$		The title of the file selector (eg. Select File)
;fileMask	The type of files that are shown
;				0=all file types
;				1=all files (locks directory switching)
;				2=all directories (locks directory switching & selects directory)
;ret		The return type
;				0=drive+dir+filename+extension (eg. C:\Games\Light Cycle 3D\Light Cycle 3D.exe)
;				1=dir+filename+extension (eg. \Games\Light Cycle 3D\Light Cycle 3D.exe)
;				2=filename+extension (eg. Light Cycle 3D.exe)
;				3=filename (eg. Light Cycle 3D)
;win		The window type
;				0=MacOSX-like style
;				1=WinXP-like style
Function fileSelector$(dir$="",mask$="*.*",maskName$="All files",fileName$="",title$="Select File...",fileMask=0,ret=0,win=0)
	Local colr%=ColorRed(),colg%=ColorGreen(),colb%=ColorBlue
	Local font
	Local gfxX=GraphicsWidth()
	Local gfxY=GraphicsHeight()
	Local x=0.5*gfxX-240,y=0.5*gfxY-160
	Local gfxBox,gfxMap,gfxFile
	Local gfxBar,gfxBarL,gfxBarR
	Local gfxNup
	Local done%=False
	Local mh%,mh1%,mh2%,md1%,md2%,mzs%
	Local mh1Timer=0,mh1d
	Local gfxFront,gfxBack
	Local gfxTemp
	Local firstTime%=True

	gfxFront=CreateImage(gfxX,gfxY): SetBuffer FrontBuffer(): GrabImage gfxFront,0,0
	gfxBack=CreateImage(gfxX,gfxY): SetBuffer BackBuffer(): GrabImage gfxBack,0,0
	gfxTemp=CreateImage(480,320)
	fsGfxMouse=LoadImage("fsmouse.bmp"): If fsGfxMouse=0 Then Return ""
	MaskImage fsGfxMouse,255,0,255
	gfxBox=LoadImage("fsfileselect"+win+".png"): If gfxBox=0 Then Return ""
	gfxMap=LoadImage("fsmap.png"): If gfxMap=0 Then Return ""
	gfxFile=LoadImage("fsfile.png"): If gfxFile=0 Then Return ""
	gfxBar=LoadImage("fsbarmid"+win+".png"): If gfxBar=0 Then Return ""
	gfxBarL=LoadImage("fsbarleft"+win+".png"): If gfxBarL=0 Then Return ""
	gfxBarR=LoadImage("fsbarright"+win+".png"): If gfxBarR=0 Then Return ""
	gfxNup=LoadImage("fsnotup"+win+".png"): If gfxNup=0 Then Return ""
	font=LoadFont("arial",13)
	fsDir$=CurrentDir$()
	fsDirF$=fsDir$
	fsFileThis$=fileName$
	fsFileSel=-1
	fsFirstFile=0
	fsChangeDrive()
	If Mid$(dir$,2,1)<>":" Then fsDir$=Left$(CurrentDir$(),2)+dir$ Else fsDir$=dir$
	fsChangeDir(fsDir$,mask$,fileMask)
	SetFont font
	FlushKeys: FlushMouse
	Repeat
		mh=False
		mh1=MouseHit(1): mh2=MouseHit(2)
		md1=MouseDown(1): md2=MouseDown(2)
		mzs=MouseZSpeed()
		DrawBlock gfxFront,0,0
		DrawBlock gfxBox,x,y
		Color 64,64,64: Text x+52,y+6,fsCutText(title$,376)
		If fileMask=0 Then Text x+52,y+292,fsCutText(fsDir$,248)
		mh1d=False
		If mh1Timer<>0
			If MilliSecs()-mh1Timer>=500 Then mh1Timer=0 Else If mh1 Then mh1d=True: mh1Timer=0
		EndIf
		If mh1 And mh1Timer=0 Then mh1Timer=MilliSecs()
		If fsFileNum>11.0*fsCols;33
			fn#=Float(Floor(fsFileNum/11)*11)-(11*fsCols-11)
			bp#=Float(fsFirstFile)/fn
			bs=(11.0*fsCols/(fn+11.0*fsCols)*(386-24))/15.0-1
			xo=x+48+bp*(383-bs*16-24)
			DrawImage gfxBarL,xo,y+207
			For b=0 To bs-1
				DrawImage gfxBar,xo+b*16+12,y+207
			Next
			DrawImage gfxBarR,xo+bs*16+12,y+207
			If md1
				If fsMouseInBox(x+48,y+207,xo-x-48,16)
					If fsFirstFile>0 Then fsFirstFile=fsFirstFile-11
				ElseIf fsMouseInBox(xo+bs*16+24,y+207,431-xo-bs*16-24+x,16)
					If fsFirstFile<fsFileNum-(11*fsCols-1) Then fsFirstFile=fsFirstFile+11
				EndIf
			ElseIf mzs>0
				If fsFirstFile>0 Then fsFirstFile=fsFirstFile-11
			ElseIf mzs<0
				If fsFirstFile<fsFileNum-(11*fsCols-1) Then fsFirstFile=fsFirstFile+11
			EndIf
		EndIf
		If fsFirstFile+11.0*fsCols>fsFileNum Then fm=fsFileNum-fsFirstFile Else fm=11.0*fsCols
		For f=0 To fm-1
			If fsFile$(f+fsFirstFile)<>""
				x1=x+52+(384/fsCols)*Int(f/11)
				y1=y+25+16*(f Mod 11)
				If FileType(fsDir$+fsFile$(f+fsFirstFile))=2
					DrawImage gfxMap,x1,y1
				ElseIf FileType(fsDir$+fsFile$(f+fsFirstFile))=1
					DrawImage gfxFile,x1,y1
				EndIf
				ff$=fsCutText(fsFile$(f+fsFirstFile),384/fsCols-32)
				Color 64,64,64: Text x1+20,y1+8,ff$,False,True
				If fsFileSel=f+fsFirstFile Then fsRectMask(x1,y1,StringWidth(ff$)+22,15,-64)
				If mh1
					If fsMouseInBox(x1,y1,StringWidth(ff$)+22,15)
						If mh1d And fsFileSel=f+fsFirstFile
							If fileMask=0 And FileType(fsDir$+fsFile$(f+fsFirstFile))=2
								fsChangeDir(fsDir$+fsFile$(f+fsFirstFile),mask$,fileMask)
							ElseIf FileType(fsDir$+fsFile$(f+fsFirstFile))<>0
								done=True
							EndIf
						Else
							If FileType(fsDir$+fsFile$(f+fsFirstFile))=1 Or (fileMask=2 And FileType(fsDir$+fsFile$(f+fsFirstFile))=2) Then fsFileThis$=fsFile$(f+fsFirstFile)
							fsFileSel=f+fsFirstFile
						EndIf
						mh=True
					EndIf
				EndIf
			EndIf
		Next
		If mask$="*.*" Then mk$="" Else mk$=" ("+mask$+")"
		Text x+56,y+258,maskName$+mk$
		Text x+328,y+258,Left(fsDir$,2)
		If fileMask<>0 Or Len(fsDir$)=3
			DrawBlock gfxNup,x+448,y
		EndIf
		If mh1
			If fsMouseInBox(x,y,24,24) Then fsDir$="": fsFileThis$="": done=True
			If fileMask=0 And fsMouseInBox(x+452,y+1,28,24) Then fsChangeDir("..",mask$,fileMask)
			If fsMouseInBox(x+374,y+286,98,26) Then fsDir$="": fsFileThis$="": done=True
			If fsMouseInBox(x+306,y+286,66,26) Then If fsFileThis$<>"" Then done=True
			If fsMouseInBox(x+48,y,386,24)
				xl=MouseX()-x: yl=MouseY()-y
				GrabImage gfxTemp,x,y
				While MouseDown(1)
					x=MouseX()-xl
					y=MouseY()-yl
					DrawBlock gfxFront,0,0
					DrawBlock gfxTemp,x,y
					fsMouseDraw()
					Flip
				Wend
			ElseIf fileMask=0 And fsMouseInBox(x+414,y+252,24,24)
				GrabImage gfxTemp,x,y
				While MouseDown(1)
					DrawBlock gfxFront,0,0
					DrawBlock gfxTemp,x,y
					Rect x+319,y+276,94,fdDriveNum*16+16,False
					fsRectMask x+319,y+276,94,fdDriveNum*16+16,128
					For d=0 To fdDriveNum-1
						Color 0,0,0
						Text x+327,y+285+d*16,Chr$(fsDrive(d))+":"
						If fsMouseInBox(x+319,y+284+d*16,94,16)
							fsRectMask x+319,y+284+d*16,94,16,-64
						EndIf
					Next
					fsMouseDraw()
					Flip
				Wend
				For d=0 To fdDriveNum-1
					If fsMouseInBox(x+319,y+284+d*16,94,16)
						fsChangeDir(Chr$(fsDrive(d))+":",mask$,fileMask)
						Exit
					EndIf
				Next
			ElseIf (Not mh)
				fsFileSel=-1
			EndIf
		EndIf
		If (mh1 And fsMouseInBox(x+48,y+230,386,20)) Or firstTime
			firstTime=False
			ft$=fsInvoer$(x+56,y+234,"",False,False,368,fsFileThis$)
			If ft$<>Chr$(27) Then fsFileThis$=ft$
			mh1=False
		EndIf
		If KeyDown(28) Or KeyDown(156) Then If fsFileThis$<>"" Then done=True
		If KeyHit(1) Then fsDir$="": fsFileThis$="": done=True
		Text x+56,y+234,fsFileThis$
		fsMouseDraw()
		Flip
	Until done
	DrawBlock gfxFront,0,0: Flip
	DrawBlock gfxBack,0,0
	FreeFont font
	FreeImage gfxBox
	FreeImage gfxMap
	FreeImage gfxFile
	FreeImage gfxBar
	FreeImage gfxBarL
	FreeImage gfxBarR
	FreeImage gfxTemp
	FreeImage gfxBack
	FreeImage gfxFront
	Color colr,colg,colb
	ChangeDir fsDirF$
	FlushKeys: FlushMouse
	If ret=1 Then Return Mid$(fsDir$,3)+fsFileThis$
	If ret=2 Then Return fsFileThis$
	If ret=3 Then dt=Instr(fsFileThis$,"."): If dt<>0 Then Return Left$(fsFileThis$,dt-1) Else Return fsFileThis$
	Return fsDir$+fsFileThis$
End Function

Function fsChangeDir(d$=".",m$,fm)
	fsChangeDrive()
	fsFileSel=-1
	fsFirstFile=0
	ChangeDir(d$)
	fsDir$=CurrentDir$()
	fsLoadDir(fsDir$,m$,fm)
End Function

Function fsChangeDrive()
	fsDrive(fdDriveNum)=Asc("A")
	fdDriveNum=1
	For d=Asc("B") To Asc("Z")
		rd=ReadDir(Chr$(d)+":\")
		If rd<>0 Then fsDrive(fdDriveNum)=d: fdDriveNum=fdDriveNum+1
		CloseDir rd
	Next
End Function

Function fsLoadDir(d$,m$,fm)
	fsFileNum=0
	fsCols=10
	For t=2 To 1 Step-1
		dr=ReadDir(d$)
		f$=NextFile$(dr): f$=NextFile$(dr)
		Repeat
			f$=NextFile$(dr): If f$="" Then Exit
			iu%=True: fr%=True: ei%=1
			For i=1 To Len(f$)
				mf$=Mid$(f$,i,1)
				If Upper$(mf$)<>mf$ Then iu=False
				If fr
					If Mid$(m$,ei,1)<>"*" And Mid$(m$,ei,1)<>mf$
						fr=False
					ElseIf Mid$(m$,ei,1)<>"*" And Mid$(m$,ei,1)=mf$
						ei=ei+1
					ElseIf ei<Len(m$) And Mid$(m$,ei+1,1)=mf$
						ei=ei+2
					EndIf
				EndIf
			Next
			If ei<Len(m$) Then fr=False

			If iu Then f$=Left$(f$,1)+Lower$(Mid$(f$,2))
			If (t<>1 Or fr) And FileType(d$+f$)=t And (fm=0 Or fm=t) And (t<>2 Or f$<>"System Volume Information")
				fsFile$(fsFileNum)=f$: fsFileNum=fsFileNum+1
			EndIf
			For c=fsCols To 2 Step-1
				If StringWidth(f$)>(384/c)-32 Then fsCols=fsGetMax(2,fsCols-1)
			Next
		Until fsFileNum>=fsFileMax
		CloseDir(dr)
	Next
End Function

Function fsMouseInBox(x,y,xs,ys)
	Return (MouseX()>=x And MouseY()>=y And MouseX()<x+xs And MouseY()<y+ys)
End Function

Function fsCutText$(t$,l)
	t1$=t$
	If StringWidth(t1$)>l;(384/fsCols)-32
		For i=1 To Len(t1$)
			If StringWidth(Left$(t1$,i))>l-4 Then Exit
		Next
		t1$=Left$(t$,i-1)+"..."
	EndIf
	Return t1$
End Function

Function fsInvoer$(x, y, q$="", xc=False, yc=False, m=0, i$="", s$="")
	ins = True
	im = CreateImage(GraphicsWidth(), GraphicsHeight())
	HandleImage im,0,0: GrabImage im,0,0
	r=ColorRed(): g=ColorGreen(): b=ColorBlue()
	cx=Len(i$)
	bl1=0: bl2=cx
	bm$=""
	mu=False
	FlushKeys
	While (Not KeyHit(28)) And (Not KeyHit(156)) And (Not KeyHit(1))
		If s$="" Then i2$=i$ Else i2$=String$(s$,Len(i$))
		If xc Then xc1=StringWidth(q$+i2$) Else xc1=0
		If yc Then yc1=FontHeight() Else yc1=0
		bll=fsGetMin(bl1,bl2)
		blr=fsGetMax(bl1,bl2)
		k=0
		Repeat
			k=GetKey()
			DrawBlock im,0,0
			If bl1<>bl2
				blx1=x-xc1/2+StringWidth(q$+Left$(i2$,bll))
				blx2=x-xc1/2+StringWidth(q$+Left$(i2$,blr))-blx1
				fsRectMask blx1,y-yc1/2,blx2,StringHeight(q$+Left$(i2$,cx))+1,-64
			EndIf
			Color r,g,b: Text x-xc1/2,y-yc1/2,q$+i2$
			Color 0,0,0
			Rect (x-xc1/2)+StringWidth(q$+Left$(i2$,cx)),y-yc1/2,2-ins,StringHeight(q$+Left$(i2$,cx))+1
			If MouseDown(1) Or MouseDown(2) Then If mu Then Color r,g,b: FreeImage im: Return i$
			If Not(MouseDown(1) Or MouseDown(2)) Then mu=True
			fsMouseDraw()
			Flip
		Until k>0
		ctl=(KeyDown(29) Or KeyDown(157))
		sft=(KeyDown(42) Or KeyDown(54))
		Select k
			Case 1: cx=0
			Case 2: cx=Len(i$)
			Case 3:
			If ctl
				bm$=Mid$(i$,bll+1,blr-bll)
			ElseIf sft
				i$=Left$(i$,bll)+bm$+Mid$(i$,blr+1)
				cx=cx+Len(bm$)
				bl1=cx: bl2=cx
			Else
				If ins Then ins=False Else ins=True
			EndIf
			Case 4: ;Delete
			If blr-bll=0 Then dl=2 Else dl=1
			i$=Left$(i$, bll)+Mid$(i$, blr+dl)
			cx=bll
			Case 8: ;Backspace
			If blr-bll=0 Then dl=1 Else dl=0
			i$=Left$(i$, fsGetMax(0,bll-dl))+Mid$(i$, blr+1)
			cx=fsGetMax(0,bll-dl)
			Case 13: ;Enter
			Case 27: i$=Chr$(27) ;Escape
			Case 30: If cx<Len(i$) Then cx=cx+1 ;Arrow right
			Case 31: If cx>0 Then cx=cx-1 ;Arrow left
			Default: ;Input
			If k>31 And (StringWidth(i$)<m Or m=0)
				If ins
					i$=Left$(i$, bll)+Chr$(k)+Mid$(i$,blr+1)
				Else
					i$=Left$(i$, bll)+Chr$(k)+Mid$(i$,blr+2)
				EndIf
				cx=bll+1
				bl1=cx
			EndIf
		End Select
		If sft Or ctl Then bl2=cx Else bl1=cx: bl2=cx
	Wend
	Color r,g,b
	FreeImage im
	FlushKeys: FlushMouse
	Return i$
End Function

Function fsMouseDraw()
	DrawImage fsGfxMouse,MouseX(),MouseY()
End Function

Function fsGetMax#(a#,b#)
	If a>b Then Return a Else Return b
End Function
Function fsGetMin#(a#,b#)
	If a<b Then Return a Else Return b
End Function

Function fsRectMask(x,y,xs,ys,lt)
	LockBuffer BackBuffer()
	For y2=y To y+ys-1: For x2=x To x+xs-1
		rgb=ReadPixelFast(x1+x2,y1+y2,BackBuffer())
		rgb=fsGetMin(fsGetMax(0,((rgb Shr 16) And 255)+lt),255)*65536+fsGetMin(fsGetMax(0,((rgb Shr 8) And 255)+lt),255)*256+fsGetMin(fsGetMax(0,(rgb And 255)+lt),255)
		WritePixelFast(x1+x2,y1+y2,rgb,BackBuffer())
	Next: Next
	UnlockBuffer BackBuffer()
End Function